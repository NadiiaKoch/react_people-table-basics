{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","cn","sex","name","PeopleTable","memo","people","useParams","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","getPersonByName","useCallback","allPeople","find","getPeopleFromServer","peopleFromServer","peopleWithParents","useEffect","length","PageNavLink","text","isActive","Navbar","App","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.330fadb4.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport type Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => (\n  <Link\n    to={person.slug}\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </Link>\n);\n","import { FC, memo } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: FC<Props> = memo(({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn(\n              { 'has-background-warning': person.slug === slug },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import {\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { Loader } from '../Loader/Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const getPersonByName = useCallback(\n    (name: string | null, allPeople: Person[]) => {\n      return allPeople.find(person => person.name === name);\n    }, [],\n  );\n\n  const getPeopleFromServer = async () => {\n    setIsLoading(true);\n    try {\n      const peopleFromServer = await getPeople();\n\n      const peopleWithParents = peopleFromServer.map((person: Person) => {\n        return {\n          ...person,\n          mother: getPersonByName(person.motherName, peopleFromServer),\n          father: getPersonByName(person.fatherName, peopleFromServer),\n        };\n      });\n\n      setPeople(peopleWithParents);\n    } catch (e) {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && (\n          <Loader />\n        )}\n\n        {isError && (\n          <p\n            data-cy=\"peopleLoadingError\"\n            className=\"has-text-danger\"\n          >\n            Something went wrong\n          </p>\n        )}\n        {people.length === 0 && !isError && !isLoading && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {people.length > 0 && (\n          <PeopleTable people={people} />\n        )}\n      </div>\n    </div>\n  );\n});\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => cn('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC, memo } from 'react';\nimport { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const Navbar: FC = memo(() => {\n  return (\n    <div className=\"navbar-brand\">\n      <PageNavLink to=\"/\" text=\"Home\" />\n      <PageNavLink to=\"people\" text=\"People\" />\n    </div>\n  );\n});\n","import {\n  Navigate,\n  Outlet,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => {\n  return (\n    <>\n      <div data-cy=\"app\">\n        <nav\n          data-cy=\"nav\"\n          className=\"navbar is-fixed-top has-shadow\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"container\">\n            <Navbar />\n          </div>\n        </nav>\n\n        <main className=\"section\">\n          <div className=\"container\">\n            <Routes>\n              <Route\n                path=\"/\"\n                element={<h1 className=\"title\">Home Page</h1>}\n              />\n              <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n              <Route\n                path=\"people\"\n                element={(\n                  <>\n                    <h1 className=\"title\">People Page</h1>\n                    <PeoplePage />\n                    <Outlet />\n                  </>\n                )}\n              >\n                <Route\n                  path=\":slug\"\n                  element={<PeoplePage />}\n                />\n              </Route>\n\n              <Route\n                path=\"*\"\n                element={<h1 className=\"title\">Page not found</h1>}\n              />\n            </Routes>\n          </div>\n        </main>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}